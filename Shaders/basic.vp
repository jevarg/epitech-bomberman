#version 130

uniform	mat4 projection;
uniform	mat4 view;
uniform	mat4 model;

/* uniform int nbLight;
   uniform float lightTab[nbLight * 10];*/

uniform sampler2D fTexture0;

in vec3 vPosition;
in vec4 vColor;
in vec3 vNormal;
in vec2 vTexCoord;

out vec4 fColor;
out vec3 fNormal;
out vec2 fUv;
out vec4 fEyePos;

struct Light
{
  vec3	pos;
  vec3	color;
  vec3	ambient;
  float	power;
  float	d;
};

/* out Light light; */

void main(void)
{
  vec4 transformedNormal = inverse(transpose(model)) * vec4(vNormal.xyz, 0.0);

  fEyePos = view * model * vec4(vPosition, 1.0);
  fColor = vColor;
  fUv = vTexCoord;
  fNormal = normalize(transformedNormal.xyz);

  gl_Position =  projection * fEyePos;
}
